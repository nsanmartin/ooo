Bugs:
- Tratar de hacer click derecho en el morph del inspector de un DenotativeObjectMorph.
- ponerle nil al morph en el inspector de un DenotativeObjectMorph mientras se está mostrando el DenotativeObjectMorph.
- [No lo puedo reproducir] renombrar no elimina el nombre del registro de nombres o algo así.
- [No sé qué quise decir] No podes poner explore it en el denotative object browser.
- En Aconcagua -> baseunit -> initialization hay un mensaje intializeNameFomOne.
- FileList no soporta nombres con tilde.
- Cuando buscas actualSenders de value en ejericio 30 (Portfolio) Error: My subclass should have overridden #typesIn:addingIncompleteTypeInfoTo: 
- Eliminar una variable temporaria de un bloque
- RenameTemporary con variable o argumento de bloque cuando hay otro bloque con el mismo nombre.
- RenameTemporary de argumento con variable temporaria adentro de otro bloque.
(Estos dos son un quilombo de arreglar, el Encoder es el que devuelve mal las positionsForTemporaryVariable)
- Create inexistent class no actualiza la vista de clases en un Browser
- El Syntax Highlighter se rompe cuando creas un método con nombre ||

Features:
- Unificar shortcuts con el menu de opciones, o sea, hacer un objeto opción al que
le puedas poner un shortcut y te lo muestre en el menú y cuando se aprete el shortcut
te haga la acción.
- Refactors:
	- variable local -> variable de instancia que se fije en los otros métodos de la clase y pregunte si sacarlos de ahí también.
	- variable local <-> variable de instancia
	- extract method
	- variable de bloque <-> variable local
	- subimplement method
	- move method down
	- change superclass
	- implement method in other class? No me gusta
	- implement method object? (te crea una clase sólo con el método actual)
	- Cambiar superclase a Object llevándose las instance variables necesarias.
	- Mensaje de clase a mensaje de instancia?
	- Insert abstract superclass
	- Insert abstract method in superclass
	- Create test for class, o create test class
	- Move to setUp?
- Que sea fácil cambiar/agregar shortcuts.
- find/replace in class/category/system.
- si no hay mensajes para la categoría, debería existir la categoría?
Si, para poder agregar otros métodos a ella. Igual, estaría bueno preguntar al
eliminar el último método de la categoría si se quiere eliminar la categoría
también.
- Multiple selection.
- Un browser de tests que te los numere y esas cosas.
- undo para refactors (el versiones sirve pero solo para cuando guardaste antes de hacerlo)
- Seleccionar un wallpaper desde el FileList.
- Rotar por Wallpapers de un directorio cada x tiempo.
- Seleccionar más de un archivo en el FileList (en cualquier lado en realidad).
- El FileList es reeee lento.
- Creador de with: e initialize: (Para no tener que escribir dos veces lo mismo).
- Que el autocomplete no tome en cuenta el case.
- Shortcuts de:
	- Seleccionar línea
	- Comentar línea
	- Indentar/desindentar línea
	- Ir al matching bracket
	- Ir al metodo en un browser
- Mensaje contains: para Set.
- Hacer que el ChangeList no te borre los cambios que querés ignorar en este
ChangeSet, para poder agregarlos en el próximo.
- No mostrar lo de declarar variable si no existe en block-local si no 
estamos adentro de un block.
- En Collection un #replace:with:ifAbsent:?
- Coso para poder dibujar con el mouse.
- No sé si hay redo.
- Shortcuts para abrir cada browser.
- Formatter de código (espacio después del selector, enters en mensajes largos, etc.)
- Cambiar categoría de mensajes de a muchos mensajes (con lo de multiple selección de mensajes debería ayudar)
- El browseIt deberia darse cuenta que hay un selector que tiene más de una palabra y browsear ese selector, como lo hace implementors of (o quizá no lo debería hacer y en eso se diferencia?)
- El undo no hace undo por palabra, sino que hace por tiempo. Todos los otros editores lo hacen por palabra. Creo que no hay ninguno que lo haga por tiempo.
- FileList con posibilidad de escribir el path al archivo.
- Search en el popup de seleccionar un selector, cuando te dice de crear uno el debugger, por ejemplo.
- Agregar selector #- en las clases de GregorianDateTime que te diga la diferencia entre dos (básicamente el #distanceTo: pero con otro nombre).
- Zoomear con la ruedita (que se agrande la letra o algo así).
- No mostrar como editado en el SmallTalkEditor cuando no quedan undos por hacer (para eso quizá habría que poder hacer undo de refactors).
- Regla horizontal para no pasarse de la línea 80 cuando se está escribiendo.
- Doble click en la parte de arriba de una ventana para agrandarla.
- El autocomplete no toma en cuenta la parte anterior del mensaje. Por ejemplo, si está tipo
self should: 'hola' rai
y querés autocompletar el rai, no te lo autocompleta bien.
- El autocomplete te borra la palabra hasta el final. si por ejemplo estás autocompletando
self shouself
y estás después de la u, te queda
self should:
- El ctrl+m si estás en un bloque y hay un mensaje en la misma línea se fija el mensaje antes del bloque. Por ejemplo, si estás en
self should: [self mensaje]
y hacés ctrl+m en mensaje, te va a mostrar implementors de should:

Arreglados:
- Tratar de guardar un morph.
- Renombrar un mensaje que no está siendo enviado por nadie.
- No funciona el ctrl-shift-c para mostrar categoria
- [https://github.com/hernanwilkinson/Cuis-Smalltalk-DenotativeObject/issues/34] Te deja poner objetos nuevos con nombre | (pipe), que rompe el programa
- TemporaryToInstanceVariable con variable de bloque cuando hay otro bloque con el mismo nombre.
- El syntax highlighter se caga cuando ponés || al principio. 
- El references to it no parece funcionar (en realidad no funcionaba para instvars, lo cual está bien porque estaba para referencias a clases)
- Tratar de hacer una variable de instancia cuando antes
era una local, aunque hayas borrado la local (Se semi arregló con el nuevo refactor)
- hacer control z después de tener errores de sintaxis cuando tenés un selector no
reconocido en el código.
